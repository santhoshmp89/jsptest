/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/rprofiler/AjaxRequestsHandler.ts":
/*!**********************************************!*\
  !*** ./src/rprofiler/AjaxRequestsHandler.ts ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar AjaxTiming_1 = __importDefault(__webpack_require__(/*! ./AjaxTiming */ \"./src/rprofiler/AjaxTiming.ts\"));\nvar AjaxRequestsHandler = /** @class */ (function () {\n    function AjaxRequestsHandler() {\n        var _this = this;\n        this.fetchRequests = [];\n        this.fetchEntriesIndices = {};\n        this.compareEntriesDelay = 100;\n        this.hasPerformance = typeof window.performance === \"object\" && typeof window.performance.now === \"function\" && typeof window.performance.getEntriesByType === \"function\";\n        this.captureFetchRequests = function () {\n            var tempArray = [];\n            var ajaxHandler = _this;\n            var onRequestError = function (error) {\n                return error;\n            };\n            var onResponseError = function (error) {\n                // @ts-ignore\n                return Promise.reject(error);\n            };\n            if (!window.fetch) {\n                return;\n            }\n            /*TODO: Adding ignore to resolve the error\n            Need to relook on ts error. After adding latest vesion in tsconfig lib, It's unable to get the fetch type.*/\n            // @ts-ignore\n            window.fetch = (function (fetch) {\n                return function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    var fetchRequestIndex = 0;\n                    /*TODO: Adding ignore to resolve the error\n                    Need to relook on ts error. After adding latest vesion in tsconfig lib, It's unable to get the promise type.*/\n                    // @ts-ignore\n                    var promise = Promise.resolve(args);\n                    promise = promise.then(function (args) {\n                        var firstArg;\n                        var config = {};\n                        if (args.length && args.length >= 1) {\n                            firstArg = args[0];\n                            if (args.length > 1) {\n                                config = args[1];\n                            }\n                        }\n                        else {\n                            return [];\n                        }\n                        var method = 'GET';\n                        if (config.method) {\n                            method = config.method;\n                        }\n                        fetchRequestIndex = tempArray.length;\n                        var fetchUrl = '';\n                        //The first argument can be either a url or Request object\n                        if (typeof (firstArg) === 'object' && !!firstArg) {\n                            if (Array.isArray(firstArg) && firstArg.length > 0) {\n                                fetchUrl = firstArg[0];\n                            }\n                            else {\n                                fetchUrl = firstArg.url;\n                            }\n                        }\n                        else {\n                            fetchUrl = firstArg;\n                        }\n                        if (fetchUrl) {\n                            tempArray.push(new AjaxTiming_1.default(fetchUrl, method, true, ajaxHandler.now()));\n                        }\n                        return [firstArg, config];\n                    }, onRequestError);\n                    // @ts-ignore\n                    promise = promise.then(function (args) { return fetch.apply(void 0, args); });\n                    promise = promise.then(function (response) {\n                        var fetchRequest = tempArray[fetchRequestIndex];\n                        var requestArray = ajaxHandler.fetchRequests;\n                        ajaxHandler.processPerformanceEntries(fetchRequest, requestArray);\n                        return response;\n                    }, onResponseError);\n                    return promise;\n                };\n            })(window.fetch);\n        };\n        this.captureFetchRequests();\n        AjaxRequestsHandler.startAjaxCapture(this);\n    }\n    AjaxRequestsHandler.prototype.getAjaxRequests = function () {\n        return this.fetchRequests;\n    };\n    AjaxRequestsHandler.prototype.clear = function () {\n        this.fetchRequests = [];\n    };\n    AjaxRequestsHandler.prototype.now = function () {\n        if (this.hasPerformance) {\n            return window.performance.now();\n        }\n        return (new Date()).getTime();\n    };\n    AjaxRequestsHandler.prototype.processPerformanceEntries = function (fetchRequest, requestArray) {\n        var ajaxHandler = this;\n        setTimeout(function () {\n            if (!ajaxHandler.hasPerformance) {\n                return;\n            }\n            var url = fetchRequest.url;\n            var matches = [];\n            var entries = performance.getEntriesByType(\"resource\");\n            for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {\n                var entry = entries_1[_i];\n                if (entry.name === url) {\n                    matches.push(entry);\n                }\n            }\n            requestArray.push(fetchRequest);\n            if (matches.length === 0) {\n                return;\n            }\n            if (!ajaxHandler.fetchEntriesIndices[url]) {\n                ajaxHandler.fetchEntriesIndices[url] = [];\n            }\n            if (matches.length === 1) {\n                fetchRequest.getPerformanceTimings(matches[0]);\n                ajaxHandler.fetchEntriesIndices[url].push(0);\n                return;\n            }\n            var u = ajaxHandler.fetchEntriesIndices[url];\n            for (var index in matches) {\n                if (u.indexOf(index) !== -1) {\n                    continue;\n                }\n                fetchRequest.getPerformanceTimings(matches[index]);\n                u.push(index);\n                return;\n            }\n            fetchRequest.getPerformanceTimings(matches[0]); // if we can't find it, just use the first entry\n        }, ajaxHandler.compareEntriesDelay);\n    };\n    AjaxRequestsHandler.startAjaxCapture = function (ajaxHandler) {\n        var xhr = XMLHttpRequest.prototype;\n        var open = xhr.open;\n        var send = xhr.send;\n        var tempArray = [];\n        if (ajaxHandler.hasPerformance && typeof window.performance.setResourceTimingBufferSize === \"function\") {\n            window.performance.setResourceTimingBufferSize(300);\n        }\n        // @ts-ignore\n        xhr.open = function (method, url, async, user, password) {\n            this.rpIndex = tempArray.length;\n            tempArray.push(new AjaxTiming_1.default(url, method, async, ajaxHandler.now()));\n            open.call(this, method, url, (async === false) ? false : true, user, password);\n        };\n        xhr.send = function (data) {\n            var _this = this;\n            var changeFunc = this.onreadystatechange;\n            this.onreadystatechange = function (arg) {\n                var request = tempArray[_this.rpIndex];\n                if (!request) {\n                    return;\n                }\n                var state = _this.readyState;\n                var hasResponse = !!(_this.response && _this.response !== null && _this.response !== undefined);\n                switch (state) {\n                    case 0:\n                        break;\n                    case 1:\n                        request.connectionEstablished = ajaxHandler.now();\n                        break;\n                    case 2:\n                        request.requestReceived = ajaxHandler.now();\n                        break;\n                    case 3:\n                        request.processingTime = ajaxHandler.now();\n                        break;\n                    case 4:\n                        request.complete = ajaxHandler.now();\n                        switch (_this.responseType) {\n                            case \"text\":\n                            case \"\":\n                                if (typeof _this.responseText === \"string\") {\n                                    request.responseSize = _this.responseText.length;\n                                }\n                                break;\n                            case \"json\":\n                                if (hasResponse && typeof _this.response.toString === \"function\") {\n                                    request.responseSize = _this.response.toString().length;\n                                }\n                                break;\n                            case \"arraybuffer\":\n                                if (hasResponse && typeof _this.response.byteLength === \"number\") {\n                                    request.responseSize = _this.response.byteLength;\n                                }\n                                break;\n                            case \"blob\":\n                                if (hasResponse && typeof _this.response.size === \"number\") {\n                                    request.responseSize = _this.response.size;\n                                }\n                                break;\n                            case \"document\":\n                                break;\n                        }\n                        ajaxHandler.processPerformanceEntries(request, ajaxHandler.fetchRequests);\n                        break;\n                }\n                if (typeof changeFunc === \"function\") {\n                    changeFunc.call(_this, arg);\n                }\n            };\n            var request = tempArray[this.rpIndex];\n            if (!request) {\n                return;\n            }\n            if (data && !isNaN(data.length)) {\n                request.sendSize = data.length;\n            }\n            request.send = ajaxHandler.now();\n            send.call(this, data);\n        };\n    };\n    return AjaxRequestsHandler;\n}());\nexports[\"default\"] = AjaxRequestsHandler;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/rprofiler/AjaxRequestsHandler.ts\n");

/***/ }),

/***/ "./src/rprofiler/AjaxTiming.ts":
/*!*************************************!*\
  !*** ./src/rprofiler/AjaxTiming.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar AjaxTiming = /** @class */ (function () {\n    function AjaxTiming(url, method, isAsync, open) {\n        var _this = this;\n        this.getPerformanceTimings = function (entry) {\n            // If a call is being made on same url multiple time, take the first one so that we capture dns and ssl time\n            _this.connect = entry.connectEnd - entry.connectStart;\n            _this.dns = entry.domainLookupEnd - entry.domainLookupStart;\n            _this.duration = entry.duration;\n            _this.load = entry.responseEnd - entry.responseStart;\n            _this.wait = entry.responseStart - entry.requestStart;\n            _this.start = entry.startTime;\n            _this.redirect = entry.redirectEnd - entry.redirectStart;\n            if (entry[\"secureConnectionStart\"]) {\n                _this.ssl = entry.connectEnd - entry[\"secureConnectionStart\"];\n            }\n        };\n        this.url = url;\n        this.method = method;\n        this.isAsync = isAsync;\n        this.open = open;\n    }\n    return AjaxTiming;\n}());\nexports[\"default\"] = AjaxTiming;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcnByb2ZpbGVyL0FqYXhUaW1pbmcudHMiLCJtYXBwaW5ncyI6Ijs7QUFBQTtJQTBCSSxvQkFBWSxHQUFXLEVBQUUsTUFBYyxFQUFFLE9BQWdCLEVBQUUsSUFBWTtRQUF2RSxpQkFLQztRQUVELDBCQUFxQixHQUFHLFVBQUMsS0FBZ0M7WUFDckQsNEdBQTRHO1lBQzVHLEtBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUMsWUFBWSxDQUFDO1lBQ3JELEtBQUksQ0FBQyxHQUFHLEdBQUcsS0FBSyxDQUFDLGVBQWUsR0FBRyxLQUFLLENBQUMsaUJBQWlCLENBQUM7WUFDM0QsS0FBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUMsUUFBUSxDQUFDO1lBQy9CLEtBQUksQ0FBQyxJQUFJLEdBQUcsS0FBSyxDQUFDLFdBQVcsR0FBRyxLQUFLLENBQUMsYUFBYSxDQUFDO1lBQ3BELEtBQUksQ0FBQyxJQUFJLEdBQUcsS0FBSyxDQUFDLGFBQWEsR0FBRyxLQUFLLENBQUMsWUFBWSxDQUFDO1lBQ3JELEtBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDLFNBQVMsQ0FBQztZQUM3QixLQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQyxXQUFXLEdBQUcsS0FBSyxDQUFDLGFBQWEsQ0FBQztZQUV4RCxJQUFJLEtBQUssQ0FBQyx1QkFBdUIsQ0FBQyxFQUFFLENBQUM7Z0JBQ2pDLEtBQUksQ0FBQyxHQUFHLEdBQUcsS0FBSyxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUMsdUJBQXVCLENBQUMsQ0FBQztZQUNqRSxDQUFDO1FBQ0wsQ0FBQztRQW5CRyxJQUFJLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQztRQUNmLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO0lBQ3JCLENBQUM7SUFnQkwsaUJBQUM7QUFBRCxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ2F0Y2hQb2ludC5IYXdrLkZyb250RW5kLkphdmFTY3JpcHRQcm92aWRlci5MaWJyYXJ5Ly4vc3JjL3Jwcm9maWxlci9BamF4VGltaW5nLnRzP2Y2OTQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQWpheFRpbWluZyB7XHJcbiAgICB1cmw6IHN0cmluZztcclxuICAgIG1ldGhvZDogc3RyaW5nO1xyXG4gICAgaXNBc3luYzogYm9vbGVhbjtcclxuXHJcbiAgICAvLyBwZXJmb3JtYW5jZVxyXG4gICAgZG5zOiBudW1iZXI7XHJcbiAgICBjb25uZWN0OiBudW1iZXI7XHJcbiAgICBkdXJhdGlvbjogbnVtYmVyO1xyXG4gICAgbG9hZDogbnVtYmVyO1xyXG4gICAgd2FpdDogbnVtYmVyO1xyXG4gICAgc3RhcnQ6IG51bWJlcjtcclxuICAgIHJlZGlyZWN0OiBudW1iZXI7XHJcbiAgICBzc2w6IG51bWJlcjtcclxuXHJcbiAgICAvLyByZWFkeVN0YXRlXHJcbiAgICBvcGVuOiBudW1iZXI7XHJcbiAgICBzZW5kOiBudW1iZXI7XHJcbiAgICBjb25uZWN0aW9uRXN0YWJsaXNoZWQ6IG51bWJlcjtcclxuICAgIHJlcXVlc3RSZWNlaXZlZDogbnVtYmVyO1xyXG4gICAgcHJvY2Vzc2luZ1RpbWU6IG51bWJlcjtcclxuICAgIGNvbXBsZXRlOiBudW1iZXI7XHJcblxyXG4gICAgcmVzcG9uc2VTaXplOiBudW1iZXI7XHJcbiAgICBzZW5kU2l6ZTogbnVtYmVyO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHVybDogc3RyaW5nLCBtZXRob2Q6IHN0cmluZywgaXNBc3luYzogYm9vbGVhbiwgb3BlbjogbnVtYmVyKSB7XHJcbiAgICAgICAgdGhpcy51cmwgPSB1cmw7XHJcbiAgICAgICAgdGhpcy5tZXRob2QgPSBtZXRob2Q7XHJcbiAgICAgICAgdGhpcy5pc0FzeW5jID0gaXNBc3luYztcclxuICAgICAgICB0aGlzLm9wZW4gPSBvcGVuO1xyXG4gICAgfVxyXG5cclxuICAgIGdldFBlcmZvcm1hbmNlVGltaW5ncyA9IChlbnRyeTogUGVyZm9ybWFuY2VSZXNvdXJjZVRpbWluZykgPT4ge1xyXG4gICAgICAgIC8vIElmIGEgY2FsbCBpcyBiZWluZyBtYWRlIG9uIHNhbWUgdXJsIG11bHRpcGxlIHRpbWUsIHRha2UgdGhlIGZpcnN0IG9uZSBzbyB0aGF0IHdlIGNhcHR1cmUgZG5zIGFuZCBzc2wgdGltZVxyXG4gICAgICAgIHRoaXMuY29ubmVjdCA9IGVudHJ5LmNvbm5lY3RFbmQgLSBlbnRyeS5jb25uZWN0U3RhcnQ7XHJcbiAgICAgICAgdGhpcy5kbnMgPSBlbnRyeS5kb21haW5Mb29rdXBFbmQgLSBlbnRyeS5kb21haW5Mb29rdXBTdGFydDtcclxuICAgICAgICB0aGlzLmR1cmF0aW9uID0gZW50cnkuZHVyYXRpb247XHJcbiAgICAgICAgdGhpcy5sb2FkID0gZW50cnkucmVzcG9uc2VFbmQgLSBlbnRyeS5yZXNwb25zZVN0YXJ0O1xyXG4gICAgICAgIHRoaXMud2FpdCA9IGVudHJ5LnJlc3BvbnNlU3RhcnQgLSBlbnRyeS5yZXF1ZXN0U3RhcnQ7XHJcbiAgICAgICAgdGhpcy5zdGFydCA9IGVudHJ5LnN0YXJ0VGltZTtcclxuICAgICAgICB0aGlzLnJlZGlyZWN0ID0gZW50cnkucmVkaXJlY3RFbmQgLSBlbnRyeS5yZWRpcmVjdFN0YXJ0O1xyXG5cclxuICAgICAgICBpZiAoZW50cnlbXCJzZWN1cmVDb25uZWN0aW9uU3RhcnRcIl0pIHtcclxuICAgICAgICAgICAgdGhpcy5zc2wgPSBlbnRyeS5jb25uZWN0RW5kIC0gZW50cnlbXCJzZWN1cmVDb25uZWN0aW9uU3RhcnRcIl07XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/rprofiler/AjaxTiming.ts\n");

/***/ }),

/***/ "./src/rprofiler/EventsTimingHandler.ts":
/*!**********************************************!*\
  !*** ./src/rprofiler/EventsTimingHandler.ts ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar types_1 = __webpack_require__(/*! ../types */ \"./src/types.ts\");\nvar ProfilerEventManager_1 = __importDefault(__webpack_require__(/*! ./ProfilerEventManager */ \"./src/rprofiler/ProfilerEventManager.ts\"));\nvar EventsTimingHandler = /** @class */ (function () {\n    function EventsTimingHandler() {\n        var _this = this;\n        //Capture window Focus (Used for Page On Time)\n        this.hiddenStrings = ['hidden', 'msHidden', 'webkitHidden', 'mozHidden'];\n        this.visibilityStrings = [\n            'visibilitychange',\n            'msvisibilitychange',\n            'webkitvisibilitychange',\n            'mozvisibilitychange'\n        ];\n        // @ts-ignore\n        this.captureSoftNavigation = false;\n        this.hidden = 'hidden';\n        this.visibilityChange = 'visibilitychange';\n        this.visibilityEvents = [];\n        // Capture scroll, focus, resize, mouse and keyEvents\n        this.eventManager = new ProfilerEventManager_1.default();\n        this.engagementTimeIntervalMs = 1000;\n        this.engagementTime = 0;\n        this.firstEngagementTime = 0;\n        this.lastEventTimeStamp = 0;\n        this.timeoutId = undefined;\n        this.startTime = new Date().getTime();\n        this.now = function () {\n            return (new Date()).getTime();\n        };\n        // @ts-ignore\n        this.startVisibilityCapture = function () {\n            _this.initializeVisibilityProperties();\n            document.addEventListener(_this.visibilityChange, _this.captureFocusEvent, false);\n        };\n        this.initializeVisibilityProperties = function () {\n            var values = _this.hiddenStrings;\n            var propertyIndex = 0;\n            for (var i = 0; i < values.length; i++) {\n                if (typeof (document[values[i]]) !== 'undefined') {\n                    propertyIndex = i;\n                }\n            }\n            _this.visibilityChange = _this.visibilityStrings[propertyIndex];\n            _this.hidden = _this.hiddenStrings[propertyIndex];\n        };\n        this.captureFocusEvent = function () {\n            _this.updateVisibilityChangeTime();\n            if (!document[_this.hidden]) {\n                _this.captureEngagementTime();\n            }\n        };\n        this.updateVisibilityChangeTime = function () {\n            if (document[_this.hidden]) {\n                _this.captureVisibilityEvent(types_1.VisibilityType.Blur);\n            }\n            else {\n                _this.captureVisibilityEvent(types_1.VisibilityType.Focus);\n            }\n        };\n        this.onBlur = function () {\n            _this.captureVisibilityEvent(types_1.VisibilityType.Blur);\n        };\n        this.onFocus = function () {\n            _this.captureVisibilityEvent(types_1.VisibilityType.Focus);\n        };\n        this.captureVisibilityEvent = function (type) {\n            _this.visibilityEvents.push({\n                type: type,\n                time: _this.now()\n            });\n        };\n        this.captureEngagementTime = function (isFirstEngagement) {\n            if (isFirstEngagement === void 0) { isFirstEngagement = true; }\n            // 1000 ms for default focus\n            if (!_this.lastEventTimeStamp) {\n                _this.engagementTime = _this.engagementTimeIntervalMs;\n                _this.lastEventTimeStamp = _this.now();\n                return;\n            }\n            var timeBetweenEvents = _this.now() - _this.lastEventTimeStamp;\n            _this.lastEventTimeStamp = _this.now();\n            if (isFirstEngagement && _this.firstEngagementTime === 0) {\n                _this.firstEngagementTime = _this.now();\n            }\n            if (timeBetweenEvents > 0 && timeBetweenEvents < _this.engagementTimeIntervalMs) {\n                clearTimeout(_this.timeoutId);\n                _this.engagementTime += timeBetweenEvents;\n                return;\n            }\n            _this.startTimer();\n        };\n        //Do not include mousemove for first engagement, as it doesn't really indicate engagement if use just moved mouse to close the page\n        this.captureMouseMove = function () {\n            _this.captureEngagementTime(false);\n        };\n        this.startTimer = function () {\n            _this.timeoutId = window.setTimeout(function () {\n                _this.engagementTime += _this.engagementTimeIntervalMs;\n            }, _this.engagementTimeIntervalMs);\n        };\n        this.getFocusAwayTime = function () {\n            var events = _this.visibilityEvents;\n            var resetIndex = -1;\n            if (events.length === 0) {\n                return 0;\n            }\n            var currentBlurIndex = resetIndex;\n            var index = 0;\n            var currentFocusIndex = resetIndex;\n            var hiddenTimeLapsed = 0;\n            while (index < events.length) {\n                if (events[index].type === types_1.VisibilityType.Blur &&\n                    currentBlurIndex === resetIndex) {\n                    currentBlurIndex = index;\n                }\n                var isNewFocusEvent = currentFocusIndex === resetIndex && currentBlurIndex !== resetIndex;\n                if (events[index].type === types_1.VisibilityType.Focus && isNewFocusEvent) {\n                    currentFocusIndex = index;\n                }\n                var validFocusChange = currentBlurIndex !== resetIndex && currentFocusIndex !== resetIndex;\n                if (validFocusChange) {\n                    var diff = events[currentFocusIndex].time - events[currentBlurIndex].time;\n                    if (diff > 0) {\n                        hiddenTimeLapsed += diff;\n                    }\n                    currentBlurIndex = resetIndex;\n                    currentFocusIndex = resetIndex;\n                }\n                index = index + 1;\n            }\n            if (currentBlurIndex === (events.length - 1)) {\n                hiddenTimeLapsed += _this.now() - events[currentBlurIndex].time;\n            }\n            return hiddenTimeLapsed;\n        };\n        this.getEngagementTime = function () {\n            return _this.engagementTime;\n        };\n        this.getStartTime = function () {\n            return _this.startTime;\n        };\n        this.getFirstEngagementTime = function () {\n            return _this.firstEngagementTime;\n        };\n        this.startSoftNavigationCapture = function () {\n            _this.captureSoftNavigation = true;\n        };\n        this.resetSoftNavigationCapture = function () {\n            _this.resetEngagementMetrics();\n            _this.visibilityEvents = [];\n        };\n        this.resetEngagementMetrics = function () {\n            _this.engagementTime = 0;\n            _this.lastEventTimeStamp = _this.now();\n            _this.firstEngagementTime = 0;\n        };\n        this.clear = function () {\n            _this.eventManager.clear();\n        };\n        this.captureEngagementTime(false);\n        this.eventManager.add('scroll', document, this.captureEngagementTime);\n        this.eventManager.add('resize', window, this.captureEngagementTime);\n        this.eventManager.add('mouseup', document, this.captureEngagementTime);\n        this.eventManager.add('keyup', document, this.captureEngagementTime);\n        this.eventManager.add('mousemove', document, this.captureMouseMove);\n        this.eventManager.add('focus', window, this.onFocus);\n        this.eventManager.add('blur', window, this.onBlur);\n        this.eventManager.add('focus', document, this.onFocus);\n        this.eventManager.add('blur', document, this.onBlur);\n    }\n    return EventsTimingHandler;\n}());\nexports[\"default\"] = EventsTimingHandler;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/rprofiler/EventsTimingHandler.ts\n");

/***/ }),

/***/ "./src/rprofiler/InputDelayHandler.ts":
/*!********************************************!*\
  !*** ./src/rprofiler/InputDelayHandler.ts ***!
  \********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ProfilerEventManager_1 = __importDefault(__webpack_require__(/*! ./ProfilerEventManager */ \"./src/rprofiler/ProfilerEventManager.ts\"));\nvar InputDelayHandler = /** @class */ (function () {\n    function InputDelayHandler() {\n        var _this = this;\n        this.firstInputDelay = 0;\n        this.firstInputTimeStamp = 0;\n        this.startTime = 0;\n        this.delay = 0;\n        this.profileManager = new ProfilerEventManager_1.default();\n        this.eventTypes = [\n            'click',\n            'mousedown',\n            'keydown',\n            'touchstart',\n            'pointerdown',\n        ];\n        this.addEventListeners = function () {\n            _this.eventTypes.forEach(function (event) {\n                _this.profileManager.add(event, document, _this.onInput);\n            });\n        };\n        this.now = function () {\n            return (new Date()).getTime();\n        };\n        this.removeEventListeners = function () {\n            _this.eventTypes.forEach(function (event) {\n                _this.profileManager.remove(event, document, _this.onInput);\n            });\n        };\n        this.onInput = function (evt) {\n            // Only count cancelable events, which should trigger behavior\n            if (!evt.cancelable) {\n                return;\n            }\n            // In some browsers `event.timeStamp` returns a `DOMTimeStamp` value\n            // (epoch time) istead of the newer `DOMHighResTimeStamp`\n            // (document-origin time). To check for that we assume any timestamp\n            // greater than 1 trillion is a `DOMTimeStamp`, and compare it using\n            var isEpochTime = evt.timeStamp > 1e12;\n            _this.firstInputTimeStamp = _this.now();\n            var useFirstInputTime = isEpochTime || !window['performance'];\n            var now = useFirstInputTime ? _this.firstInputTimeStamp : window['performance'].now();\n            _this.delay = now - evt.timeStamp;\n            if (evt.type == 'pointerdown') {\n                _this.onPointerDown();\n            }\n            else {\n                _this.removeEventListeners();\n                _this.updateFirstInputDelay();\n            }\n        };\n        this.onPointerUp = function () {\n            _this.removeEventListeners();\n            _this.updateFirstInputDelay();\n        };\n        this.onPointerCancel = function () {\n            _this.removePointerEventListeners();\n        };\n        this.removePointerEventListeners = function () {\n            _this.profileManager.remove('pointerup', document, _this.onPointerUp);\n            _this.profileManager.remove('pointercancel', document, _this.onPointerCancel);\n        };\n        this.updateFirstInputDelay = function () {\n            if (_this.delay >= 0 && _this.delay < (_this.firstInputTimeStamp - _this.startTime)) {\n                _this.firstInputDelay = Math.round(_this.delay);\n            }\n        };\n        this.startSoftNavigationCapture = function () {\n            _this.resetSoftNavigationCapture();\n        };\n        this.resetSoftNavigationCapture = function () {\n            _this.resetFirstInputDelay();\n            _this.addEventListeners();\n        };\n        this.resetFirstInputDelay = function () {\n            _this.delay = 0;\n            _this.firstInputDelay = 0;\n            _this.startTime = 0;\n            _this.firstInputTimeStamp = 0;\n        };\n        this.startTime = this.now();\n        this.addEventListeners();\n    }\n    InputDelayHandler.prototype.onPointerDown = function () {\n        this.profileManager.add('pointerup', document, this.onPointerUp);\n        this.profileManager.add('pointercancel', document, this.onPointerCancel);\n    };\n    InputDelayHandler.prototype.getFirstInputDelay = function () {\n        return this.firstInputDelay;\n    };\n    return InputDelayHandler;\n}());\nexports[\"default\"] = InputDelayHandler;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/rprofiler/InputDelayHandler.ts\n");

/***/ }),

/***/ "./src/rprofiler/ProfilerEventManager.ts":
/*!***********************************************!*\
  !*** ./src/rprofiler/ProfilerEventManager.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ProfilerEventManager = /** @class */ (function () {\n    function ProfilerEventManager() {\n        this.events = [];\n        this.hasAttachEvent = !!window['attachEvent'];\n    }\n    ProfilerEventManager.prototype.add = function (type, target, func) {\n        this.events.push({ type: type, target: target, func: func });\n        if (this.hasAttachEvent) {\n            target.attachEvent(\"on\" + type, func);\n        }\n        else {\n            target.addEventListener(type, func, false);\n        }\n    };\n    ProfilerEventManager.prototype.remove = function (type, target, func) {\n        if (this.hasAttachEvent) {\n            target.detachEvent(type, func);\n        }\n        else {\n            target.removeEventListener(type, func, false);\n        }\n        var index = this.events.indexOf({ type: type, target: target, func: func });\n        if (index !== 1) {\n            this.events.splice(index, 1);\n        }\n    };\n    ProfilerEventManager.prototype.clear = function () {\n        var events = this.events;\n        for (var i = 0; i < events.length; i++) {\n            var ev = events[i];\n            this.remove(ev.type, ev.target, ev.func);\n        }\n        this.events = [];\n    };\n    return ProfilerEventManager;\n}());\nexports[\"default\"] = ProfilerEventManager;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcnByb2ZpbGVyL1Byb2ZpbGVyRXZlbnRNYW5hZ2VyLnRzIiwibWFwcGluZ3MiOiI7O0FBRUE7SUFBQTtRQUNJLFdBQU0sR0FBb0IsRUFBRSxDQUFDO1FBQzdCLG1CQUFjLEdBQVksQ0FBQyxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsQ0FBQztJQW1DdEQsQ0FBQztJQWpDRyxrQ0FBRyxHQUFILFVBQUksSUFBWSxFQUFFLE1BQVcsRUFBRSxJQUFrQjtRQUM3QyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQztRQUU3RCxJQUFJLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztZQUN0QixNQUFNLENBQUMsV0FBVyxDQUFDLElBQUksR0FBRyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDMUMsQ0FBQzthQUNJLENBQUM7WUFDRixNQUFNLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxFQUFFLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQztRQUMvQyxDQUFDO0lBQ0wsQ0FBQztJQUVELHFDQUFNLEdBQU4sVUFBTyxJQUFZLEVBQUUsTUFBVyxFQUFFLElBQWtCO1FBQ2hELElBQUksSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO1lBQ3RCLE1BQU0sQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ25DLENBQUM7YUFDSSxDQUFDO1lBQ0YsTUFBTSxDQUFDLG1CQUFtQixDQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDbEQsQ0FBQztRQUNELElBQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO1FBQzlFLElBQUksS0FBSyxLQUFLLENBQUMsRUFBRSxDQUFDO1lBQ2QsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ2pDLENBQUM7SUFDTCxDQUFDO0lBRUQsb0NBQUssR0FBTDtRQUNJLElBQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDM0IsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQztZQUNyQyxJQUFNLEVBQUUsR0FBRyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDckIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzdDLENBQUM7UUFFRCxJQUFJLENBQUMsTUFBTSxHQUFHLEVBQUUsQ0FBQztJQUNyQixDQUFDO0lBQ0wsMkJBQUM7QUFBRCxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ2F0Y2hQb2ludC5IYXdrLkZyb250RW5kLkphdmFTY3JpcHRQcm92aWRlci5MaWJyYXJ5Ly4vc3JjL3Jwcm9maWxlci9Qcm9maWxlckV2ZW50TWFuYWdlci50cz81NjcwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByb2ZpbGVyRXZlbnQgfSBmcm9tIFwiLi4vdHlwZXNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFByb2ZpbGVyRXZlbnRNYW5hZ2VyIHtcclxuICAgIGV2ZW50czogUHJvZmlsZXJFdmVudFtdID0gW107XHJcbiAgICBoYXNBdHRhY2hFdmVudDogYm9vbGVhbiA9ICEhd2luZG93WydhdHRhY2hFdmVudCddO1xyXG5cclxuICAgIGFkZCh0eXBlOiBzdHJpbmcsIHRhcmdldDogYW55LCBmdW5jOiAoYW55KSA9PiBhbnkpIHtcclxuICAgICAgICB0aGlzLmV2ZW50cy5wdXNoKHsgdHlwZTogdHlwZSwgdGFyZ2V0OiB0YXJnZXQsIGZ1bmM6IGZ1bmMgfSk7XHJcblxyXG4gICAgICAgIGlmICh0aGlzLmhhc0F0dGFjaEV2ZW50KSB7XHJcbiAgICAgICAgICAgIHRhcmdldC5hdHRhY2hFdmVudChcIm9uXCIgKyB0eXBlLCBmdW5jKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHRhcmdldC5hZGRFdmVudExpc3RlbmVyKHR5cGUsIGZ1bmMsIGZhbHNlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcmVtb3ZlKHR5cGU6IHN0cmluZywgdGFyZ2V0OiBhbnksIGZ1bmM6IChhbnkpID0+IGFueSkge1xyXG4gICAgICAgIGlmICh0aGlzLmhhc0F0dGFjaEV2ZW50KSB7XHJcbiAgICAgICAgICAgIHRhcmdldC5kZXRhY2hFdmVudCh0eXBlLCBmdW5jKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHRhcmdldC5yZW1vdmVFdmVudExpc3RlbmVyKHR5cGUsIGZ1bmMsIGZhbHNlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3QgaW5kZXggPSB0aGlzLmV2ZW50cy5pbmRleE9mKHsgdHlwZTogdHlwZSwgdGFyZ2V0OiB0YXJnZXQsIGZ1bmM6IGZ1bmMgfSk7XHJcbiAgICAgICAgaWYgKGluZGV4ICE9PSAxKSB7XHJcbiAgICAgICAgICAgIHRoaXMuZXZlbnRzLnNwbGljZShpbmRleCwgMSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGNsZWFyKCkge1xyXG4gICAgICAgIGNvbnN0IGV2ZW50cyA9IHRoaXMuZXZlbnRzO1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZXZlbnRzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGV2ID0gZXZlbnRzW2ldO1xyXG4gICAgICAgICAgICB0aGlzLnJlbW92ZShldi50eXBlLCBldi50YXJnZXQsIGV2LmZ1bmMpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5ldmVudHMgPSBbXTtcclxuICAgIH1cclxufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/rprofiler/ProfilerEventManager.ts\n");

/***/ }),

/***/ "./src/rprofiler/ProfilerJsError.ts":
/*!******************************************!*\
  !*** ./src/rprofiler/ProfilerJsError.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ProfilerJsError = /** @class */ (function () {\n    function ProfilerJsError(message, url, lineNumber) {\n        this.count = 0;\n        this.message = message;\n        this.url = url;\n        this.lineNumber = lineNumber;\n    }\n    ProfilerJsError.createText = function (msg, url, num) {\n        return [msg, url, num].join(\":\");\n    };\n    ProfilerJsError.prototype.getText = function () {\n        return ProfilerJsError.createText(this.message, this.url, this.lineNumber);\n    };\n    return ProfilerJsError;\n}());\nexports[\"default\"] = ProfilerJsError;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcnByb2ZpbGVyL1Byb2ZpbGVySnNFcnJvci50cyIsIm1hcHBpbmdzIjoiOztBQUFBO0lBTUkseUJBQVksT0FBZSxFQUFFLEdBQVcsRUFBRSxVQUFrQjtRQUY1RCxVQUFLLEdBQVcsQ0FBQyxDQUFDO1FBR2QsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7UUFDdkIsSUFBSSxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUM7UUFDZixJQUFJLENBQUMsVUFBVSxHQUFHLFVBQVUsQ0FBQztJQUNqQyxDQUFDO0lBRU0sMEJBQVUsR0FBakIsVUFBa0IsR0FBVyxFQUFFLEdBQVcsRUFBRSxHQUFXO1FBQ25ELE9BQU8sQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNyQyxDQUFDO0lBRUQsaUNBQU8sR0FBUDtRQUNJLE9BQU8sZUFBZSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQy9FLENBQUM7SUFDTCxzQkFBQztBQUFELENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9DYXRjaFBvaW50Lkhhd2suRnJvbnRFbmQuSmF2YVNjcmlwdFByb3ZpZGVyLkxpYnJhcnkvLi9zcmMvcnByb2ZpbGVyL1Byb2ZpbGVySnNFcnJvci50cz8wYTk2Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIFByb2ZpbGVySnNFcnJvciB7XHJcbiAgICBtZXNzYWdlOiBzdHJpbmc7XHJcbiAgICB1cmw6IHN0cmluZztcclxuICAgIGxpbmVOdW1iZXI6IG51bWJlcjtcclxuICAgIGNvdW50OiBudW1iZXIgPSAwO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2U6IHN0cmluZywgdXJsOiBzdHJpbmcsIGxpbmVOdW1iZXI6IG51bWJlcikge1xyXG4gICAgICAgIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2U7XHJcbiAgICAgICAgdGhpcy51cmwgPSB1cmw7XHJcbiAgICAgICAgdGhpcy5saW5lTnVtYmVyID0gbGluZU51bWJlcjtcclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgY3JlYXRlVGV4dChtc2c6IHN0cmluZywgdXJsOiBzdHJpbmcsIG51bTogbnVtYmVyKTogc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gW21zZywgdXJsLCBudW1dLmpvaW4oXCI6XCIpO1xyXG4gICAgfVxyXG5cclxuICAgIGdldFRleHQoKTogc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gUHJvZmlsZXJKc0Vycm9yLmNyZWF0ZVRleHQodGhpcy5tZXNzYWdlLCB0aGlzLnVybCwgdGhpcy5saW5lTnVtYmVyKTtcclxuICAgIH1cclxufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/rprofiler/ProfilerJsError.ts\n");

/***/ }),

/***/ "./src/rprofiler/rprofiler.ts":
/*!************************************!*\
  !*** ./src/rprofiler/rprofiler.ts ***!
  \************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar web_vitals_1 = __webpack_require__(/*! web-vitals */ \"./node_modules/web-vitals/dist/web-vitals.umd.cjs\");\nvar types_1 = __webpack_require__(/*! ../types */ \"./src/types.ts\");\nvar AjaxRequestsHandler_1 = __importDefault(__webpack_require__(/*! ./AjaxRequestsHandler */ \"./src/rprofiler/AjaxRequestsHandler.ts\"));\nvar EventsTimingHandler_1 = __importDefault(__webpack_require__(/*! ./EventsTimingHandler */ \"./src/rprofiler/EventsTimingHandler.ts\"));\nvar InputDelayHandler_1 = __importDefault(__webpack_require__(/*! ./InputDelayHandler */ \"./src/rprofiler/InputDelayHandler.ts\"));\nvar ProfilerEventManager_1 = __importDefault(__webpack_require__(/*! ./ProfilerEventManager */ \"./src/rprofiler/ProfilerEventManager.ts\"));\nvar ProfilerJsError_1 = __importDefault(__webpack_require__(/*! ./ProfilerJsError */ \"./src/rprofiler/ProfilerJsError.ts\"));\nvar RProfiler = /** @class */ (function () {\n    function RProfiler() {\n        var _this = this;\n        // private restUrl: string = \"{{restUrl}}\";\n        this.restUrl = \"portalstage.catchpoint.com/jp/1826/v3.3.11/M\";\n        this.startTime = (new Date()).getTime();\n        this.eventsTimingHandler = new EventsTimingHandler_1.default();\n        this.inputDelay = new InputDelayHandler_1.default();\n        // version: string = \"{{version}}\"; //version number of inline script\n        this.version = \"v4.0.0\"; //version number of inline script\n        this.info = {};\n        this.hasInsight = false;\n        this.data = {\n            start: this.startTime,\n            jsCount: 0,\n            jsErrors: [],\n            loadTime: -1,\n            loadFired: window.document.readyState == \"complete\",\n        };\n        this.eventManager = new ProfilerEventManager_1.default();\n        this.setCLS = function (_a) {\n            var metricName = _a.name, metricValue = _a.delta;\n            var CLS = metricName === 'CLS' ? metricValue : undefined;\n            _this.cls = CLS;\n        };\n        this.setLCP = function (_a) {\n            var metricName = _a.name, metricValue = _a.delta;\n            var LCP = metricName === 'LCP' ? metricValue : undefined;\n            _this.lcp = LCP;\n        };\n        // Value being used instead delta as metricValue, Delta provide single value and value is for overall value.\n        this.setINP = function (_a) {\n            var metricName = _a.name, metricValue = _a.value;\n            var INP = metricName === 'INP' ? metricValue : undefined;\n            _this.inp = INP;\n        };\n        this.recordPageLoad = function () {\n            _this.data.loadTime = (new Date()).getTime();\n            _this.data.loadFired = true;\n        };\n        this.addError = function (msg, url, lineNum) {\n            _this.data.jsCount++;\n            var currError = ProfilerJsError_1.default.createText(msg, url, lineNum);\n            var errorArr = _this.data.jsErrors;\n            for (var _i = 0, errorArr_1 = errorArr; _i < errorArr_1.length; _i++) {\n                var err = errorArr_1[_i];\n                if (err.getText() == currError) {\n                    err.count++;\n                    return;\n                }\n            }\n            errorArr.push(new ProfilerJsError_1.default(msg, url, lineNum));\n        };\n        this.getAjaxRequests = function () {\n            return _this.ajaxHandler.getAjaxRequests();\n        };\n        this.clearAjaxRequests = function () {\n            _this.ajaxHandler.clear();\n        };\n        this.addInfo = function (infoType, key, value) {\n            if (_this.isNullOrEmpty(infoType)) {\n                return;\n            }\n            if (_this.isNullOrEmpty(value)) {\n                _this.info[infoType] = key;\n            }\n            else {\n                if (_this.isNullOrEmpty(key)) {\n                    return;\n                }\n                if (_this.isNullOrEmpty(_this.info[infoType])) {\n                    _this.info[infoType] = {};\n                }\n                _this.info[infoType][key] = value;\n            }\n            _this.hasInsight = true;\n        };\n        this.clearInfo = function () {\n            _this.info = {};\n            _this.hasInsight = false;\n        };\n        this.clearErrors = function () {\n            _this.data.jsCount = 0;\n            _this.data.jsErrors = [];\n        };\n        this.getInfo = function () {\n            if (!_this.hasInsight) {\n                return null;\n            }\n            return _this.info;\n        };\n        this.getEventTimingHandler = function () {\n            return _this.eventsTimingHandler;\n        };\n        this.getInputDelay = function () {\n            return _this.inputDelay;\n        };\n        this.getCPWebVitals = function () {\n            (0, web_vitals_1.onCLS)(_this.setCLS, { reportAllChanges: false });\n            (0, web_vitals_1.onLCP)(_this.setLCP, { reportAllChanges: false });\n            (0, web_vitals_1.onINP)(_this.setINP, { reportAllChanges: false });\n            return {\n                cls: _this.cls,\n                lcp: _this.lcp,\n                inp: _this.inp\n            };\n        };\n        this.attachIframe = function () {\n            var protocol = window.location.protocol;\n            var iframe = document.createElement(\"iframe\");\n            iframe.src = \"about:blank\";\n            var style = iframe.style;\n            style.position = \"absolute\";\n            style.top = \"-10000px\";\n            style.left = \"-1000px\";\n            iframe.addEventListener('load', function (event) {\n                var frame = event.currentTarget;\n                if (frame && frame.contentDocument) {\n                    var iframeDocument = frame.contentDocument;\n                    var rumScript = iframeDocument.createElement('script');\n                    rumScript.type = 'text/javascript';\n                    rumScript.src = protocol + '//' + _this.restUrl;\n                    iframeDocument.body.appendChild(rumScript);\n                }\n            });\n            if (document.body) {\n                document.body.insertAdjacentElement('afterbegin', iframe);\n            }\n        };\n        this.eventManager.add(types_1.WindowEvent.Load, window, this.recordPageLoad);\n        var errorFunc = this.addError;\n        this.ajaxHandler = new AjaxRequestsHandler_1.default();\n        (0, web_vitals_1.onCLS)(this.setCLS, { reportAllChanges: false });\n        (0, web_vitals_1.onLCP)(this.setLCP, { reportAllChanges: false });\n        (0, web_vitals_1.onINP)(this.setINP, { reportAllChanges: false });\n        function recordJsError(e) {\n            var ev = e.target || e.srcElement;\n            if (ev.nodeType == 3) {\n                ev = ev.parentNode;\n            }\n            errorFunc(\"N/A\", ev.src || ev.URL, -1);\n            return false;\n        }\n        if (!!window[\"opera\"]) {\n            this.eventManager.add(types_1.WindowEvent.Error, document, recordJsError);\n        }\n        else if (\"onerror\" in window) {\n            var origOnError = window.onerror;\n            window.onerror = function (msg, url, lineNum) {\n                errorFunc(msg, url !== null && url !== void 0 ? url : '', lineNum !== null && lineNum !== void 0 ? lineNum : 0);\n                if (!!origOnError) {\n                    return origOnError(msg, url, lineNum);\n                }\n                return false;\n            };\n        }\n        // Event to capture the errors in promise rejection\n        if (\"onunhandledrejection\" in window) {\n            window.onunhandledrejection = function (errorEvent) {\n                var _a, _b, _c;\n                var fullMessage = (_a = errorEvent.reason.stack) !== null && _a !== void 0 ? _a : \"\";\n                var errorMsg = fullMessage !== \"\" ? fullMessage.split(\"at\") : [];\n                var fileUrl = errorMsg[1] ? errorMsg[1].replace(/:\\d+/g, \"\") : \"\";\n                var errorLineNumbers = errorMsg[1] ? errorMsg[1].match(/:\\d+/g) : [];\n                var lineNum = errorLineNumbers[0] ? errorLineNumbers[0].replace(\":\", \"\") : 0;\n                errorFunc((_c = (_b = errorMsg[0]) === null || _b === void 0 ? void 0 : _b.trim()) !== null && _c !== void 0 ? _c : \"N/A\", fileUrl.trim(), lineNum);\n            };\n        }\n        if (!!window[\"__cpCdnPath\"]) {\n            this.restUrl = window[\"__cpCdnPath\"].trim();\n        }\n    }\n    RProfiler.prototype.isNullOrEmpty = function (val) {\n        if (val === undefined || val === null) {\n            return true;\n        }\n        if (typeof val == \"string\") {\n            var str = val;\n            return str.trim().length == 0;\n        }\n        return false;\n    };\n    RProfiler.prototype.dispatchCustomEvent = function (event) {\n        (function (w) {\n            if (typeof w.CustomEvent === \"function\") {\n                return false;\n            }\n            function CustomEvent(event, params) {\n                params = params || { bubbles: false, cancelable: false, detail: undefined };\n                var evt = document.createEvent('CustomEvent');\n                evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n                return evt;\n            }\n            CustomEvent.prototype = Event.prototype;\n            // @ts-ignore\n            w.CustomEvent = CustomEvent;\n        })(window); //for the browsers don't support CustomEvent\n        var e = new CustomEvent(event);\n        window.dispatchEvent(e);\n    };\n    return RProfiler;\n}());\nexports[\"default\"] = RProfiler;\nvar profiler = new RProfiler();\nwindow[\"RProfiler\"] = profiler;\nwindow[\"WindowEvent\"] = types_1.WindowEvent;\n// if the document state is already complete by the time script is injected - can happen in the case of tag managers like GTM \nif (document.readyState === 'complete') {\n    profiler.attachIframe();\n}\nelse {\n    document.onreadystatechange = function () {\n        if (document.readyState === 'complete') {\n            profiler.attachIframe();\n        }\n    };\n}\nprofiler.dispatchCustomEvent(\"GlimpseLoaded\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/rprofiler/rprofiler.ts\n");

/***/ }),

/***/ "./src/types.ts":
/*!**********************!*\
  !*** ./src/types.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PostType = exports.VisibilityType = exports.WindowEvent = void 0;\nvar WindowEvent;\n(function (WindowEvent) {\n    WindowEvent[\"Load\"] = \"load\";\n    WindowEvent[\"BeforeUnload\"] = \"beforeunload\";\n    WindowEvent[\"Abort\"] = \"abort\";\n    WindowEvent[\"Error\"] = \"error\";\n    WindowEvent[\"Unload\"] = \"unload\";\n})(WindowEvent || (exports.WindowEvent = WindowEvent = {}));\nvar VisibilityType;\n(function (VisibilityType) {\n    VisibilityType[VisibilityType[\"Focus\"] = 0] = \"Focus\";\n    VisibilityType[VisibilityType[\"Blur\"] = 1] = \"Blur\";\n})(VisibilityType || (exports.VisibilityType = VisibilityType = {}));\n;\n// enum definition matches core enum\nvar PostType;\n(function (PostType) {\n    PostType[PostType[\"OnLoad\"] = 0] = \"OnLoad\";\n    PostType[PostType[\"OnBeforeUnload\"] = 1] = \"OnBeforeUnload\";\n    PostType[PostType[\"OnAbort\"] = 2] = \"OnAbort\";\n    PostType[PostType[\"Flush\"] = 3] = \"Flush\";\n})(PostType || (exports.PostType = PostType = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdHlwZXMudHMiLCJtYXBwaW5ncyI6Ijs7O0FBU0EsSUFBWSxXQU1YO0FBTkQsV0FBWSxXQUFXO0lBQ25CLDRCQUFhO0lBQ2IsNENBQTZCO0lBQzdCLDhCQUFlO0lBQ2YsOEJBQWU7SUFDZixnQ0FBaUI7QUFDckIsQ0FBQyxFQU5XLFdBQVcsMkJBQVgsV0FBVyxRQU10QjtBQUVELElBQVksY0FHWDtBQUhELFdBQVksY0FBYztJQUN0QixxREFBSztJQUNMLG1EQUFJO0FBQ1IsQ0FBQyxFQUhXLGNBQWMsOEJBQWQsY0FBYyxRQUd6QjtBQUFBLENBQUM7QUEwQkYsb0NBQW9DO0FBQ3BDLElBQVksUUFLWDtBQUxELFdBQVksUUFBUTtJQUNoQiwyQ0FBVTtJQUNWLDJEQUFrQjtJQUNsQiw2Q0FBVztJQUNYLHlDQUFTO0FBQ2IsQ0FBQyxFQUxXLFFBQVEsd0JBQVIsUUFBUSxRQUtuQiIsInNvdXJjZXMiOlsid2VicGFjazovL0NhdGNoUG9pbnQuSGF3ay5Gcm9udEVuZC5KYXZhU2NyaXB0UHJvdmlkZXIuTGlicmFyeS8uL3NyYy90eXBlcy50cz9hNzZkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQcm9maWxlckpzRXJyb3IgZnJvbSBcIi4vcnByb2ZpbGVyL1Byb2ZpbGVySnNFcnJvclwiO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBXaW5kb3cge1xyXG4gICAgLy8gSUUgc3BlY2lmaWNcclxuICAgIGF0dGFjaEV2ZW50KGV2ZW50OiBzdHJpbmcsIGxpc3RlbmVyOiBFdmVudExpc3RlbmVyKTogYm9vbGVhbjtcclxuICAgIGRldGFjaEV2ZW50KGV2ZW50OiBzdHJpbmcsIGxpc3RlbmVyOiBFdmVudExpc3RlbmVyKTogdm9pZDtcclxuICAgIEN1c3RvbUV2ZW50KGV2ZW50OiBzdHJpbmcsIHBhcmFtczogYW55KTogQ3VzdG9tRXZlbnQ7XHJcbn1cclxuXHJcbmV4cG9ydCBlbnVtIFdpbmRvd0V2ZW50IHtcclxuICAgIExvYWQgPSBcImxvYWRcIixcclxuICAgIEJlZm9yZVVubG9hZCA9IFwiYmVmb3JldW5sb2FkXCIsXHJcbiAgICBBYm9ydCA9IFwiYWJvcnRcIixcclxuICAgIEVycm9yID0gXCJlcnJvclwiLFxyXG4gICAgVW5sb2FkID0gXCJ1bmxvYWRcIlxyXG59XHJcblxyXG5leHBvcnQgZW51bSBWaXNpYmlsaXR5VHlwZSB7XHJcbiAgICBGb2N1cyxcclxuICAgIEJsdXJcclxufTtcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgVmlzaWJpbGl0eUV2ZW50IHtcclxuICAgIHR5cGU6IFZpc2liaWxpdHlUeXBlO1xyXG4gICAgdGltZTogbnVtYmVyXHJcbn1cclxuZXhwb3J0IGludGVyZmFjZSBQcm9maWxlckRhdGEge1xyXG4gICAgc3RhcnQ6IG51bWJlcjtcclxuICAgIGpzQ291bnQ6IG51bWJlcjtcclxuICAgIGpzRXJyb3JzOiBQcm9maWxlckpzRXJyb3JbXTtcclxuICAgIGxvYWRUaW1lOiBudW1iZXI7XHJcbiAgICBsb2FkRmlyZWQ6IGJvb2xlYW47XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgQ1BXZWJWaXRhbHMge1xyXG4gICAgY2xzOiBudW1iZXI7XHJcbiAgICBsY3A6IG51bWJlcjtcclxuICAgIGlucDogbnVtYmVyO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFByb2ZpbGVyRXZlbnQge1xyXG4gICAgdHlwZTogc3RyaW5nO1xyXG4gICAgdGFyZ2V0OiBhbnk7XHJcbiAgICBmdW5jOiAoYW55KSA9PiBhbnk7XHJcbn1cclxuXHJcbi8vIGVudW0gZGVmaW5pdGlvbiBtYXRjaGVzIGNvcmUgZW51bVxyXG5leHBvcnQgZW51bSBQb3N0VHlwZSB7XHJcbiAgICBPbkxvYWQgPSAwLFxyXG4gICAgT25CZWZvcmVVbmxvYWQgPSAxLFxyXG4gICAgT25BYm9ydCA9IDIsXHJcbiAgICBGbHVzaCA9IDNcclxufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/types.ts\n");

/***/ }),

/***/ "./node_modules/web-vitals/dist/web-vitals.umd.cjs":
/*!*********************************************************!*\
  !*** ./node_modules/web-vitals/dist/web-vitals.umd.cjs ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("!function(e,n){ true?n(exports):0}(this,(function(e){\"use strict\";var n,t,i,r,o,a=-1,c=function(e){addEventListener(\"pageshow\",(function(n){n.persisted&&(a=n.timeStamp,e(n))}),!0)},u=function(){return window.performance&&performance.getEntriesByType&&performance.getEntriesByType(\"navigation\")[0]},f=function(){var e=u();return e&&e.activationStart||0},s=function(e,n){var t=u(),i=\"navigate\";a>=0?i=\"back-forward-cache\":t&&(document.prerendering||f()>0?i=\"prerender\":document.wasDiscarded?i=\"restore\":t.type&&(i=t.type.replace(/_/g,\"-\")));return{name:e,value:void 0===n?-1:n,rating:\"good\",delta:0,entries:[],id:\"v3-\".concat(Date.now(),\"-\").concat(Math.floor(8999999999999*Math.random())+1e12),navigationType:i}},d=function(e,n,t){try{if(PerformanceObserver.supportedEntryTypes.includes(e)){var i=new PerformanceObserver((function(e){Promise.resolve().then((function(){n(e.getEntries())}))}));return i.observe(Object.assign({type:e,buffered:!0},t||{})),i}}catch(e){}},l=function(e,n,t,i){var r,o;return function(a){n.value>=0&&(a||i)&&((o=n.value-(r||0))||void 0===r)&&(r=n.value,n.delta=o,n.rating=function(e,n){return e>n[1]?\"poor\":e>n[0]?\"needs-improvement\":\"good\"}(n.value,t),e(n))}},p=function(e){requestAnimationFrame((function(){return requestAnimationFrame((function(){return e()}))}))},v=function(e){var n=function(n){\"pagehide\"!==n.type&&\"hidden\"!==document.visibilityState||e(n)};addEventListener(\"visibilitychange\",n,!0),addEventListener(\"pagehide\",n,!0)},m=function(e){var n=!1;return function(t){n||(e(t),n=!0)}},h=-1,g=function(){return\"hidden\"!==document.visibilityState||document.prerendering?1/0:0},T=function(e){\"hidden\"===document.visibilityState&&h>-1&&(h=\"visibilitychange\"===e.type?e.timeStamp:0,E())},y=function(){addEventListener(\"visibilitychange\",T,!0),addEventListener(\"prerenderingchange\",T,!0)},E=function(){removeEventListener(\"visibilitychange\",T,!0),removeEventListener(\"prerenderingchange\",T,!0)},C=function(){return h<0&&(h=g(),y(),c((function(){setTimeout((function(){h=g(),y()}),0)}))),{get firstHiddenTime(){return h}}},L=function(e){document.prerendering?addEventListener(\"prerenderingchange\",(function(){return e()}),!0):e()},b=[1800,3e3],w=function(e,n){n=n||{},L((function(){var t,i=C(),r=s(\"FCP\"),o=d(\"paint\",(function(e){e.forEach((function(e){\"first-contentful-paint\"===e.name&&(o.disconnect(),e.startTime<i.firstHiddenTime&&(r.value=Math.max(e.startTime-f(),0),r.entries.push(e),t(!0)))}))}));o&&(t=l(e,r,b,n.reportAllChanges),c((function(i){r=s(\"FCP\"),t=l(e,r,b,n.reportAllChanges),p((function(){r.value=performance.now()-i.timeStamp,t(!0)}))})))}))},S=[.1,.25],P=function(e,n){n=n||{},w(m((function(){var t,i=s(\"CLS\",0),r=0,o=[],a=function(e){e.forEach((function(e){if(!e.hadRecentInput){var n=o[0],t=o[o.length-1];r&&e.startTime-t.startTime<1e3&&e.startTime-n.startTime<5e3?(r+=e.value,o.push(e)):(r=e.value,o=[e])}})),r>i.value&&(i.value=r,i.entries=o,t())},u=d(\"layout-shift\",a);u&&(t=l(e,i,S,n.reportAllChanges),v((function(){a(u.takeRecords()),t(!0)})),c((function(){r=0,i=s(\"CLS\",0),t=l(e,i,S,n.reportAllChanges),p((function(){return t()}))})),setTimeout(t,0))})))},I={passive:!0,capture:!0},F=new Date,A=function(e,r){n||(n=r,t=e,i=new Date,k(removeEventListener),D())},D=function(){if(t>=0&&t<i-F){var e={entryType:\"first-input\",name:n.type,target:n.target,cancelable:n.cancelable,startTime:n.timeStamp,processingStart:n.timeStamp+t};r.forEach((function(n){n(e)})),r=[]}},M=function(e){if(e.cancelable){var n=(e.timeStamp>1e12?new Date:performance.now())-e.timeStamp;\"pointerdown\"==e.type?function(e,n){var t=function(){A(e,n),r()},i=function(){r()},r=function(){removeEventListener(\"pointerup\",t,I),removeEventListener(\"pointercancel\",i,I)};addEventListener(\"pointerup\",t,I),addEventListener(\"pointercancel\",i,I)}(n,e):A(n,e)}},k=function(e){[\"mousedown\",\"keydown\",\"touchstart\",\"pointerdown\"].forEach((function(n){return e(n,M,I)}))},x=[100,300],B=function(e,i){i=i||{},L((function(){var o,a=C(),u=s(\"FID\"),f=function(e){e.startTime<a.firstHiddenTime&&(u.value=e.processingStart-e.startTime,u.entries.push(e),o(!0))},p=function(e){e.forEach(f)},h=d(\"first-input\",p);o=l(e,u,x,i.reportAllChanges),h&&v(m((function(){p(h.takeRecords()),h.disconnect()}))),h&&c((function(){var a;u=s(\"FID\"),o=l(e,u,x,i.reportAllChanges),r=[],t=-1,n=null,k(addEventListener),a=f,r.push(a),D()}))}))},N=0,R=1/0,H=0,O=function(e){e.forEach((function(e){e.interactionId&&(R=Math.min(R,e.interactionId),H=Math.max(H,e.interactionId),N=H?(H-R)/7+1:0)}))},j=function(){return o?N:performance.interactionCount||0},q=function(){\"interactionCount\"in performance||o||(o=d(\"event\",O,{type:\"event\",buffered:!0,durationThreshold:0}))},V=[200,500],_=0,z=function(){return j()-_},G=[],J={},K=function(e){var n=G[G.length-1],t=J[e.interactionId];if(t||G.length<10||e.duration>n.latency){if(t)t.entries.push(e),t.latency=Math.max(t.latency,e.duration);else{var i={id:e.interactionId,latency:e.duration,entries:[e]};J[i.id]=i,G.push(i)}G.sort((function(e,n){return n.latency-e.latency})),G.splice(10).forEach((function(e){delete J[e.id]}))}},Q=function(e,n){n=n||{},L((function(){var t;q();var i,r=s(\"INP\"),o=function(e){e.forEach((function(e){(e.interactionId&&K(e),\"first-input\"===e.entryType)&&(!G.some((function(n){return n.entries.some((function(n){return e.duration===n.duration&&e.startTime===n.startTime}))}))&&K(e))}));var n,t=(n=Math.min(G.length-1,Math.floor(z()/50)),G[n]);t&&t.latency!==r.value&&(r.value=t.latency,r.entries=t.entries,i())},a=d(\"event\",o,{durationThreshold:null!==(t=n.durationThreshold)&&void 0!==t?t:40});i=l(e,r,V,n.reportAllChanges),a&&(\"PerformanceEventTiming\"in window&&\"interactionId\"in PerformanceEventTiming.prototype&&a.observe({type:\"first-input\",buffered:!0}),v((function(){o(a.takeRecords()),r.value<0&&z()>0&&(r.value=0,r.entries=[]),i(!0)})),c((function(){G=[],_=j(),r=s(\"INP\"),i=l(e,r,V,n.reportAllChanges)})))}))},U=[2500,4e3],W={},X=function(e,n){n=n||{},L((function(){var t,i=C(),r=s(\"LCP\"),o=function(e){var n=e[e.length-1];n&&n.startTime<i.firstHiddenTime&&(r.value=Math.max(n.startTime-f(),0),r.entries=[n],t())},a=d(\"largest-contentful-paint\",o);if(a){t=l(e,r,U,n.reportAllChanges);var u=m((function(){W[r.id]||(o(a.takeRecords()),a.disconnect(),W[r.id]=!0,t(!0))}));[\"keydown\",\"click\"].forEach((function(e){addEventListener(e,(function(){return setTimeout(u,0)}),!0)})),v(u),c((function(i){r=s(\"LCP\"),t=l(e,r,U,n.reportAllChanges),p((function(){r.value=performance.now()-i.timeStamp,W[r.id]=!0,t(!0)}))}))}}))},Y=[800,1800],Z=function e(n){document.prerendering?L((function(){return e(n)})):\"complete\"!==document.readyState?addEventListener(\"load\",(function(){return e(n)}),!0):setTimeout(n,0)},$=function(e,n){n=n||{};var t=s(\"TTFB\"),i=l(e,t,Y,n.reportAllChanges);Z((function(){var r=u();if(r){var o=r.responseStart;if(o<=0||o>performance.now())return;t.value=Math.max(o-f(),0),t.entries=[r],i(!0),c((function(){t=s(\"TTFB\",0),(i=l(e,t,Y,n.reportAllChanges))(!0)}))}}))};e.CLSThresholds=S,e.FCPThresholds=b,e.FIDThresholds=x,e.INPThresholds=V,e.LCPThresholds=U,e.TTFBThresholds=Y,e.getCLS=P,e.getFCP=w,e.getFID=B,e.getINP=Q,e.getLCP=X,e.getTTFB=$,e.onCLS=P,e.onFCP=w,e.onFID=B,e.onINP=Q,e.onLCP=X,e.onTTFB=$}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/web-vitals/dist/web-vitals.umd.cjs\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/rprofiler/rprofiler.ts");
/******/ 	
/******/ })()
;
